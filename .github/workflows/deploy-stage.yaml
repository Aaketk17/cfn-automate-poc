name: Deploy CloudFormation templates in Stage environment

on:
  pull_request:
    types:
      - closed
    branches:
      - "iac-release/customer/stage"
    paths:
      - "staging/**.yaml"
      - "staging/**.yml"
      - ".github/workflows/deploy-stage.yaml"
      - ".github/workflows/cfn-lint.yaml"

jobs:
  package-to-s3-stage:
    if: github.event.pull_request.merged == true
    name: Package CloudFormation templates to S3 and deploy to Stage environment
    environment: Stage
    runs-on: [self-hosted, linux, ARM64, cfn-poc]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set timestamp variable
        id: timestamp
        run: echo "time_stamp=$(date +"%Y%m%d%H%M%S")-${GITHUB_SHA}" >> $GITHUB_OUTPUT

      - name: Package CloudFormation templates to S3
        run: |
          echo "Packaging CloudFormation templates to S3"
          aws cloudformation package \
            --template-file dev/parent.yaml \
            --s3-bucket ${{ secrets.S3_BUCKET }} \
            --s3-prefix ${{ secrets.S3_PREFIX }} \
            --output-template-file customer-cfn-stack-tpl-${{ secrets.S3_PREFIX }}.yaml

      - name: Deploy ${{ matrix.environment }} stack
        run: |
          aws cloudformation deploy \
            --template-file customer-cfn-stack-tpl-${{ secrets.S3_PREFIX }}.yaml \
            --stack-name "iac-customer-${{ secrets.S3_PREFIX }}" \
            --capabilities CAPABILITY_NAMED_IAM
          rm -rf customer-cfn-stack-tpl-${{ secrets.S3_PREFIX }}.yaml
